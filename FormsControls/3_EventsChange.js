/*Изменение: change, input, cut, copy, paste

	Событие change
Событие change происходит по окончании изменения значения элемента формы, когда это изменение зафиксировано.
Для текстовых элементов это означает, что событие произойдёт не при каждом вводе, а при потере фокуса.

Например, пока вы набираете что-то в текстовом поле ниже – события нет. 
Но как только вы уведёте фокус на другой элемент, например, нажмёте кнопку – произойдет событие onchange.*/
<input type="text" onchange="alert(this.value)">
<input type="button" value="Кнопка">

/*Для остальных же элементов: select, input type=checkbox/radio оно срабатывает сразу при выборе значения.*/


/*Событие input
Событие input срабатывает тут же при изменении значения текстового элемента и поддерживается всеми браузерами, кроме IE8-.
В IE9 оно поддерживается частично, а именно – не возникает при удалении символов (как и onpropertychange).
Пример использования (не работает в IE8-):*/
<input type="text"> oninput: <span id="result"></span>
<script>
  var input = document.body.children[0];
  input.oninput = function() {
    document.getElementById('result').innerHTML = input.value;
  };
</script>
/*В современных браузерах oninput – самое главное событие для работы с элементом формы. 
Именно его, а не keydown/keypress следует использовать.*/

/*IE10-, событие propertychange
Это событие происходит только в IE10-, при любом изменении свойства. Оно позволяет отлавливать изменение тут же. Оно нестандартное, и его основная область использования – исправление недочётов обработки событий в старых IE.

Если поставить его на checkbox в IE8-, то получится «правильное» событие change:*/


/*События cut, copy, paste
Эти события используются редко. Они происходят при вырезании/вставке/копировании значения.

К сожалению, кросс-браузерного способа получить данные, которые вставляются/копируются, не существует, поэтому их основное применение – это отмена соответствующей операции.*/
<input type="text" id="input"> event: <span id="result"></span>
<script>
  input.oncut = input.oncopy = input.onpaste = function(event) {
    result.innerHTML = event.type + ' ' + input.value;
    return false;
  };
</script>




/*Итого
События изменения данных:

	change
Изменение значения любого элемента формы. Для текстовых элементов срабатывает при потере фокуса.
В IE8- на чекбоксах ждет потери фокуса, поэтому для мгновенной реакции ставят также onclick-обработчик или onpropertychange.

	input
Событие срабатывает только на текстовых элементах. Оно не ждет потери фокуса, в отличие от change.	
В IE8- не поддерживается, в IE9 не работает при удалении символов.

	propertychange
Только для IE10-. Универсальное событие для отслеживания изменения свойств элементов. Имя изменённого свойства содержится в event.propertyName. Используют для мгновенной реакции на изменение значения в старых IE.	
В IE9 не срабатывает при удалении символов.

	cut/copy/paste	
Срабатывают при вставке/копировании/удалении текста. Если в их обработчиках отменить действие браузера, то вставки/копирования/удаления не произойдёт.	
Вставляемое значение получить нельзя: на момент срабатывания события в элементе всё ещё старое значение, а новое недоступно.
*/
/*Ещё особенность: в IE8- события change, propertychange, cut и аналогичные не всплывают. То есть, обработчики нужно назначать на сам элемент, без делегирования.*/
































