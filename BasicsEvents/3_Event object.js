/*Объект события

Детали произошедшего браузер записывает в «объект события», который передаётся первым аргументом в обработчик.
Свойства объекта event:

event.type		Тип события, в данном случае click
event.currentTarget	Элемент, на котором сработал обработчик. Значение – в точности такое же, как и у this, но бывают ситуации, когда обработчик является методом объекта и его this при помощи bind привязан к этому объекту, тогда мы можем использовать event.currentTarget.
event.clientX / event.clientY	Координаты курсора в момент клика (относительно окна)*/

/*Объект события доступен и в HTML
При назначении обработчика в HTML, тоже можно использовать переменную event, это будет работать кросс-браузерно:
<input type="button" onclick="alert(event.type)" value="Тип события">
Это возможно потому, что когда браузер из атрибута создаёт функцию-обработчик, 
то она выглядит так: function(event) { alert(event.type) }. То есть, её первый аргумент называется "event".*/

/*Особенности IE8-
IE8- вместо передачи параметра обработчику создаёт глобальный объект window.event. Обработчик может обратиться к нему.*/


/*Итого
Объект события содержит ценную информацию о деталях события.
Он передается первым аргументом event в обработчик для всех браузеров, 
кроме IE8-, в которых используется глобальная переменная window.event.
Кросс-браузерно для JavaScript-обработчика получаем объект события так:*/
element.onclick = function(event) {
  event = event || window.event;
  // Теперь event - объект события во всех браузерах.
};




































