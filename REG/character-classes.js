/*Классы и спецсимволы
Для поиска символов определённого вида в регулярных выражениях предусмотрены «классы символов».
Класс символов – это специальное обозначение, под которое подходит любой символ из определённого набора.

\d (от английского «digit» – «цифра») Цифра, символ от 0 до 9.
\s (от английского «space» – «пробел»)  Пробельный символ, включая табы, переводы строки и т.п.
\w (от английского «word» – «слово»)  Символ «слова», а точнее – буква латинского алфавита или
цифра или подчёркивание '_'. Не-английские буквы не являются \w, 
то есть русская буква не подходит.

Например, \d\s\w обозначает цифру, за которой идёт пробельный символ, а затем символ слова.
Регулярное выражение может содержать одновременно и обычные символы и классы.
Например, CSS\d найдёт строку CSS, с любой цифрой после неё:


Граница слова \b
Граница слова \b – это особый класс.
Он интересен тем, что обозначает не символ, а границу между символами.
Граница имеет «нулевую ширину» в том смысле, что обычно символам 
регулярного выражения соответствуют символы строки, но не в этом случае.
Граница – это проверка.
При поиске движок регулярных выражений идёт по шаблону и одновременно по строке, 
пытаясь построить соответствие. Когда он видит \b, то проверяет, что текущая позиция 
в строке подходит под одно из условий:
    Начало текста, если первый символ \w.
    Конец текста, если последний символ \w.
    Внутри текста, если с одной стороны \w, а с другой – не \w.

Как правило, \b используется, чтобы искать отдельно стоящее слово. Не на русском конечно, хотя подобную проверку, как мы увидим далее, можно легко сделать для любого языка. А вот на английском, как в примере выше или для чисел, которые являются частным случаем \w – легко.*/



/*Обратные классы
Для каждого класса существует «обратный ему», представленный такой же, но заглавной буквой.
«Обратный» – означает, что ему соответствуют все остальные символы, например:

\D  Не-цифра, то есть любой символ кроме \d, например буква.
\S  Не-пробел, то есть любой символ кроме \s, например буква.
\W  Любой символ, кроме \w, то есть не латинница, не подчёркивание, не цифра. В частности, русские буквы принадлежат этому классу.
\B  Проверка, обратная \b.

Первый способ – найти все цифры через match(/\d/g).
Обратные классы помогут реализовать альтернативный – найти все НЕцифры и удалить их из строки:*/
var str = "+7(903)-123-45-67";
alert( str.replace(/\D/g, "") ); // 79031234567


/*Пробелы – обычные символы
Заметим, что в регулярных выражениях пробел – такой же символ, как и другие.*/


/*Точка – любой символ
В регулярном выражении, точка "." обозначает любой символ, кроме перевода строки:*/
var re = /CS.4/;
alert( "CSS4".match(re) ); // найдено "CSS4"
alert( "CS-4".match(re) ); // найдено "CS-4"
alert( "CS 4".match(re) ); // найдено "CS 4" (пробел тоже символ)
/*Обратим внимание – точка означает именно «произвольный символ».*/
alert( "CS4".match(/CS.4/) ); // нет совпадений, так как для точки нет символа



/*Экранирование специальных символов
Другие символы, имеющие особый смысл: [ \ ^ $ . | ? * + ( )
Чтобы использовать специальный символ в качестве обычного, он должен быть экранирован.
Или, другими словами, перед символом должен быть обратный слэш '\'.

Круглые скобки также являются специальными символами, так что для поиска именно 
скобки нужно использовать \(. Пример ниже ищет строку "g()":
alert( "function g()".match(/g\(\)/) ); // "g()"

Сам символ слэш '/', хотя и не является специальными символом в регулярных выражениях, 
но открывает-закрывает регэксп в синтаксисе /...pattern.../, 
поэтому его тоже нужно экранировать.

Так выглядит поиск слэша '/'
alert( "/".match(/\//) ); // '/'

Так выглядит поиск обратного слэша "\":
alert( "1\2".match(/\\/) ); // '\'
*/



/*Итого
Мы рассмотрели классы для поиска типов символов:

\d – цифры.
\D – не-цифры.
\s – пробельные символы, переводы строки.
\S – всё, кроме \s.
\w – латинница, цифры, подчёркивание '_'.
\W – всё, кроме \w.
'.' – точка обозначает любой символ, кроме перевода строки.
Если хочется поискать именно сочетание "\d" или символ «точка», 
то его экранируют обратным слэшем, вот так: \.

Заметим, что регулярное выражение может также содержать перевод строки \n, 
табуляцию \t и прочие спецсимволы для строк. Конфликта с классами не происходит, 
так как для них зарезервированы другие буквы.*/




















