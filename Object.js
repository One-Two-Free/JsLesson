/*
Объекты в JavaScript сочетают в себе два важных функционала.

Первый – это ассоциативный массив: структура, пригодная для хранения любых данных. 

Второй – языковые возможности для объектно-ориентированного программирования. */

/*Ассоциативный массив – структура данных, в которой можно хранить любые данные в формате ключ-значение.
Основные операции с объектами – это создание, получение и удаление свойств.
Удаление свойства осуществляется оператором delete:*/
var person = {};
person.age = 25;
delete person.age;

/*
Оператор "in" проверяет есть ли в объекте свойство с определенным ключом.
Его синтаксис: "prop" in obj, причем имя свойства – в виде строки
*/
if ("name" in person) {
  alert( "Свойство name существует!" );
}

/*
чаще используется другой способ – сравнение значения с undefined.
Дело в том, что в JavaScript можно обратиться к любому свойству объекта, даже если его нет.
Ошибки не будет.
Но если свойство не существует, то вернется специальное значение undefined:*/
var person = {};
alert( person.lalala ); // undefined, нет свойства с ключом lalala

/*
Доступ через точку используется, если мы на этапе написания программы уже знаем название свойства. 
А если оно будет определено по ходу выполнения, например, введено посетителем и записано в переменную, 
то единственный выбор – квадратные скобки.*/

/*Для перебора всех свойств из объекта используется цикл по свойствам for..in.
При этом for..in последовательно переберёт свойства объекта obj, имя каждого свойства будет записано в key и вызвано тело цикла.*/
for (key in obj) {
  /* ... делать что-то с obj[key] ... */
}

/*
Как узнать, сколько свойств хранит объект? Готового метода для этого нет.
Самый кросс-браузерный способ – это сделать цикл по свойствам и посчитать, вот так:*/
var menu = {  width: 300,  height: 200,  title: "Menu"
};
var counter = 0;
for (var key in menu) {
  counter++;
}
alert( "Всего свойств: " + counter );

//оперделить пуст ли объект
function isEmpty(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
}