/*Доступ к DOM начинается с объекта document. Из него можно добраться до любых узлов.
Сверху documentElement и body
Самые верхние элементы дерева доступны напрямую из document.
<HTML> = document.documentElement
Первая точка входа – document.documentElement. Это свойство ссылается на DOM-объект для тега <html>.
<BODY> = document.body
Вторая точка входа – document.body, который соответствует тегу <body>.
В современных браузерах (кроме IE8-) также есть document.head – прямая ссылка на <head>
Есть одна тонкость: document.body может быть равен null
Нельзя получить доступ к элементу, которого еще не существует в момент выполнения скрипта.
В частности, если скрипт находится в <head>, то в нём недоступен document.body.
Поэтому в следующем примере первый alert выведет null:

В DOM активно используется null
В мире DOM в качестве значения, обозначающего «нет такого элемента» или 
«узел не найден», используется не undefined, а null.*/


/*Дети: childNodes, firstChild, lastChild
Здесь и далее мы будем использовать два принципиально разных термина.
Дочерние элементы (или дети) – элементы, которые лежат непосредственно внутри данного. 
Например, внутри <HTML> обычно лежат <HEAD> и <BODY>.
Потомки – все элементы, которые лежат внутри данного, вместе с их детьми, детьми 
их детей и так далее. То есть, всё поддерево DOM.

Список детей – только для чтения!
Скажем больше – все навигационные свойства, которые перечислены в этой главе – только для чтения. 
Нельзя просто заменить элемент присвоением childNodes[i] = ....
Изменение DOM осуществляется другими методами, которые мы рассмотрим далее, 
все навигационные ссылки при этом обновляются автоматически.*/