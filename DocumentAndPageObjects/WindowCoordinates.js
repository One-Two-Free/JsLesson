/*Координаты в окне

Координатная система относительно окна браузера начинается в левом-верхнем углу текущей видимой области окна.
Мы будем называть координаты в ней clientX/clientY.*/


	/*getBoundingClientRect()
Метод elem.getBoundingClientRect() возвращает координаты элемента, под которыми понимаются размеры «воображаемого прямоугольника», который охватывает весь элемент.

Координаты возвращаются в виде объекта со свойствами:
	top – Y-координата верхней границы элемента,
	left – X-координата левой границы,
	right – X-координата правой границы,
	bottom – Y-координата нижней границы. 
	есть рисунок

Координаты относительно окна не учитывают прокрутку, они высчитываются от границ текущей видимой области.
Иначе говоря, если страницу прокрутить, то элемент поднимется выше или опустится ниже – его координаты относительно окна изменятся.

	Координаты могут быть дробными – это нормально, так как они возвращаются из внутренних структур браузера.
	Координаты могут быть и отрицательными, например если прокрутить страницу так, что верх элемента будет выходить за верхнуюю границу окна, то его top-координата будет меньше нуля.
	Некоторые современные браузеры также добавляют к результату getBoundingClientRect свойства для ширины и высоты: width/height, но их можно получить и простым вычитанием: height = bottom - top, width = right - left.*/
/*Координаты right/bottom отличаются от CSS-свойств
Если рассмотреть позиционирование элементов при помощи CSS-свойства position, то там тоже указываются left, right, top, bottom.
Однако, по CSS свойство right задаёт расстояние от правой границы, а bottom – от нижней.
Если вы взглянете на иллюстрацию выше, то увидите, что в JavaScript это не так. 
Все координаты отсчитываются слева/сверху, в том числе и эти.*/

/*Метод elem.getBoundingClientRect() изнутри
Браузер отображает любое содержимое, используя прямоугольники.
В случае с блочным элементом, таким как DIV, элемент сам по себе образует прямоугольник. 
Но если элемент строчный и содержит в себе длинный текст, то каждая строка 
будет отдельным прямоугольником, с одинаковой высотой но разной длиной (у каждой строки – своя длина).

Если обобщить, содержимое элемента может отображаться в одном прямоугольнике или в нескольких.
Все эти прямоугольники можно получить с помощью elem.getClientRects(). 
А метод elem.getBoundingClientRect() возвращает один охватывающий прямоугольник для всех getClientRects().*/

/*elementFromPoint(x, y)
Возвращает элемент, который находится на координатах (x, y) относительно окна.
Синтаксис:*/ var elem = document.elementFromPoint(x, y);
/*Аналогично предыдущему методу, используются координаты относительно окна, 
так что, в зависимости от прокрутки страницы, в центре может быть разный элемент.*/

/*Для координат вне окна elementFromPoint возвращает null
Метод document.elementFromPoint(x,y) работает только если координаты (x,y) находятся в пределах окна.
Если одна из них отрицательна или больше чем ширина/высота окна – он возвращает null.
В большинстве случаев использования это не является проблемой, но нужно обязательно иметь такую возможность в виду.*/





















